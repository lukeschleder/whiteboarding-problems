// Create a function that takes an array of numbers and return "Boom!" if the number 7 appears in the array. Otherwise, return "there is no 7 in the array".

function sevenBoom(arr) {
		if(arr.join('').includes(7)){
			return "Boom!";
		} else return "there is no 7 in the array";
}

Write a function, .vreplace() that extends the String prototype by replacing all vowels in a string with a specified vowel.

String.prototype.vreplace = function(vowel) {
	return this.replace(/[aeiou]/gi, vowel);
}

Write a function redundant that takes in a string str and returns a function that returns str.

function redundant(str) {
  return function() { return str; };
}

Create a function that squares every digit of a number 

function squareDigits(n) {
	var arr=[]
for(var i=0;i<n.toString().length;i++){
var sqt=Math.pow(Number(n.toString().charAt(i)),2)
arr.push(sqt)
}
	return Number(arr.join(''));
}

Given a number, return a string of the word "Boom", which varies in the following ways:

The string should include n number of "o"s, unless n is below 2 (in that case, return "boom").
If n is evenly divisible by 2, add an exclamation mark to the end.
If n is evenly divisible by 5, return the string in ALL CAPS.
If n is evenly divisible by both 2 and 5, return the string in ALL CAPS and add an exclamation mark to the end.

const boomIntensity = n => {
	if (n < 2) return 'boom';
	const boom = 'B' + 'o'.repeat(n) + 'm' + (!(n % 2) ? '!' : '');
	return !(n % 5) ? boom.toUpperCase() : boom;
};

Create a function that takes a number (step) as an argument and returns the amount of matchsticks in that step. See step 1, 2 and 3 in the image above.

function matchHouses(step) {
	if(step === 0) {
		return 0;
	}else{
		return (step*6)-(step -1);
	}
}

Create a function that takes a number as an argument. Add up all the numbers from 1 to the number you passed to the function. For example, if the input is 4 then your function should return 10 because 1 + 2 + 3 + 4 = 10.

function addUp(num) {
	let sum = 0;
	for(let i = 1; i <= num; i++){
		sum += i;
	}
	return sum;
}

Create a function which returns the word in the string, but with all the fog letters removed. However, if the string is clear from fog, return "It's a clear day!".

function clearFog(str) {
	const regex = /[fog]/g;
	if(str.match(/([fog])/g) === null) {
    return "It's a clear day!";
	}
	else {
		return str.replace(regex, '');
	}
}

Write a function that takes the base and height of a triangle and return its area.

function triArea(base, height) {
	return base*height/2;
}

The farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.

function animals(chickens, cows, pigs) {
	return chickens * 2 + cows * 4 + pigs * 4 ;
}

Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.

function divisibleByFive(n) {
	if (n % 5 === 0){
		return true;
	} else return false;
}

Create a function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.

function nextEdge(side1, side2) {
	return (side1+side2)-1;
}
